<<<<<<< HEAD
uAdmin the Golang Web Framework
===============================
uAdmin is easy to use, blazing fast and secure. It is a simple yet powerful web framework for building web applications.

Before you proceed to the installation, go over to the `Getting Started`_ to see the prerequisite requirements.

.. _Getting Started: https://uadmin-docs.readthedocs.io/en/latest/getting_started.html

Installation
^^^^^^^^^^^^

.. code-block:: bash

    $ go get -u -v github.com/uadmin/uadmin/...

To test if your installation is fine, run the **uadmin** command line:

.. code-block:: bash

    $ uadmin
    Usage: uadmin COMMAND [--src]
    This tools helps you prepare a folder for a new project or update static files and templates

    Commands:
    prepare         Generates folders and prepares static and templates
    version         Shows the version of uAdmin

    Get full documentation online:
    https://uadmin-docs.readthedocs.io/en/latest/

Your First App
^^^^^^^^^^^^^^
Let's build your first app which is a Todo list. First, we will create a folder for your project and prepare it.

.. code-block:: bash

    $ mkdir -p ~/go/src/github.com/your_name/todo
    $ cd ~/go/src/github.com/your_name/todo
    $ uadmin prepare
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/models
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/api
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/views
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/media
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/static
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/templates

Now use your code editor to create `main.go` and put this code inside it.

.. code-block:: go

    package main

    import (
        "github.com/uadmin/uadmin"
    )

    func main() {
        uadmin.StartServer()
    }

Prepare modules

.. code-block:: bash

   go mod init
   go mod tidy

Now to run your code (Linux and Apple macOS):

.. code-block:: bash

    go build; ./todo

In Windows:

.. code-block:: bash

    go build & todo

Result:

.. code-block:: bash

    [   OK   ]   Initializing DB: [13/13]
    [   OK   ]   Initializing Languages: [185/185]
    [  INFO  ]   Auto generated admin user. Username: admin, Password: admin.
    [   OK   ]   Synching System Settings: [46/46]
    [   OK   ]   Server Started: http://0.0.0.0:8080
             ___       __          _
      __  __/   | ____/ /___ ___  (_)___
     / / / / /| |/ __  / __  __ \/ / __ \
    / /_/ / ___ / /_/ / / / / / / / / / /
    \__,_/_/  |_\__,_/_/ /_/ /_/_/_/ /_/

.. IMPORTANT::
   In Windows, you need to use localhost in order to run your application (e.g. http://localhost:8080).

If you go to the explorer, you will notice that there are automatically generated **.key** and **.salt** files hidden in your computer.

**.key** is used for authentication process to assure that the key of the user ("person A" for instance) held by "person B" belongs to the authenticated user which is "person A".

**.salt** is extra salt added to password hashing. They add an extra security to your application.

Once they have been deleted, no one can login to your application unless you use the recovery admin account that is automatically generated by your terminal.

.. image:: assets/keysalt.png
   :align: center

|

Open your browser and go to http://localhost:8080. Then login using "admin” as username and password.

.. image:: tutorial/assets/loginform.png
   :align: center

|

Well done! You have created your first application with the following `system models`_ in the uAdmin dashboard.

.. image:: assets/uadmindashboard.png

|

Go to `uAdmin Tutorials`_ section for the continuation.

.. _uAdmin Tutorials: https://uadmin-docs.readthedocs.io/en/latest/coverage.html

.. _system models: https://uadmin-docs.readthedocs.io/en/latest/system_reference.html

Dockerize Your App
^^^^^^^^^^^^^^^^^^
.. code-block:: bash

   docker create


Update uAdmin to latest version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Open your terminal and apply the following commands:

.. code-block:: bash

    $ cd ~/go/src/github.com/uadmin/uadmin
    $ go install
    $ uadmin version
    [  INFO  ]   0.6.2

.. toctree::
   :maxdepth: 1

   getting_started
   coverage
   application
   quiz
   api
   dapi
   quick_reference
   system_reference
   tags
   bestpractices
   about
   license
   roadmap
=======
uAdmin the Golang Web Framework
===============================
uAdmin is easy to use, blazing fast and secure. It is a simple yet powerful web framework for building web applications.

Before you proceed to the installation, go over to the `Getting Started`_ to see the prerequisite requirements.

.. _Getting Started: https://uadmin-docs.readthedocs.io/en/latest/getting_started.html

Installation
^^^^^^^^^^^^

.. code-block:: bash

    $ go get -u -v github.com/uadmin/uadmin/...

To test if your installation is fine, run the **uadmin** command line:

.. code-block:: bash

    $ uadmin
    Usage: uadmin COMMAND [-e email] [-d domain]
    This tools allows you to publish your project online

    Commands:
    publish         This publishes your project online
    prepare         Generates folders and prepares static and templates
    version         Shows the version of uAdmin

    Arguments:
    -e, --email     Your email. This is required for you to be able to maintain your project.
    -d, --domain    You can choose your domain name which will customize your URL

    Get full documentation online:
    https://uadmin-docs.readthedocs.io/en/latest/

Your First App
^^^^^^^^^^^^^^
Let's build your first app which is a Todo list. First, we will create a folder for your project and prepare it.

.. code-block:: bash

    $ mkdir -p ~/go/src/github.com/your_name/todo
    $ cd ~/go/src/github.com/your_name/todo
    $ uadmin prepare
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/models
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/api
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/views
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/media
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/static
    [   OK   ]   Created: /home/pc_name/go/src/github.com/your_name/todo/templates

Use your favorite editor to create "main.go" inside that path. Put the
following code in "main.go".

.. code-block:: go

    package main

    import (
        "github.com/uadmin/uadmin"
    )

    func main() {
        uadmin.StartServer()
    }

Now to run your code (Linux and Apple macOS):

.. code-block:: bash

    go build; ./todo

In Windows:

.. code-block:: bash

    go build & todo

Result:

.. code-block:: bash

    [   OK   ]   Initializing DB: [13/13]
    [   OK   ]   Initializing Languages: [185/185]
    [  INFO  ]   Auto generated admin user. Username: admin, Password: admin.
    [   OK   ]   Synching System Settings: [46/46]
    [   OK   ]   Server Started: http://0.0.0.0:8080
             ___       __          _
      __  __/   | ____/ /___ ___  (_)___
     / / / / /| |/ __  / __  __ \/ / __ \
    / /_/ / ___ / /_/ / / / / / / / / / /
    \__,_/_/  |_\__,_/_/ /_/ /_/_/_/ /_/

.. IMPORTANT::
   In Windows, you need to use localhost in order to run your application (e.g. http://localhost:8080).

If you go to the explorer, you will notice that there are automatically generated **.key** and **.salt** files hidden in your computer.

**.key** is used for authentication process to assure that the key of the user ("person A" for instance) held by "person B" belongs to the authenticated user which is "person A".

**.salt** is extra salt added to password hashing. They add an extra security to your application.

Once they have been deleted, no one can login to your application unless you use the recovery admin account that is automatically generated by your terminal.

.. image:: assets/keysalt.png
   :align: center

|

Open your browser and go to http://localhost:8080. Then login using "admin” as username and password.

.. image:: tutorial/assets/loginform.png
   :align: center

|

Well done! You have created your first application with the following `system models`_ in the uAdmin dashboard.

.. image:: assets/uadmindashboard.png

|

Go to `uAdmin Tutorials`_ section for the continuation.

.. _uAdmin Tutorials: https://uadmin-docs.readthedocs.io/en/latest/coverage.html

.. _system models: https://uadmin-docs.readthedocs.io/en/latest/system_reference.html

Publish your app
^^^^^^^^^^^^^^^^
To take your app live, it is simple:

.. code-block:: bash

    $ uadmin publish
    Enter your email: me@example.com
    Your project will be published to https://my-proj.uadmin.io
    Enter the name of your sub-domain (my-proj) [auto]: my-app
    Did you change the default port from 8080?
    This is the port you have in uadmin.Port = 8080
    Enter the port that your server run on [8080]:
    [   OK   ]   Compressing [420/420]
    [   OK   ]   Your application has been uploaded
    [   OK   ]   Application installed succesfully
    [   OK   ]   Your Project has been published to https://my-app.uadmin.io/

Update uAdmin to latest version
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Open your terminal and apply the following commands:

.. code-block:: bash

    $ cd ~/go/src/github.com/uadmin/uadmin
    $ go install
    $ uadmin version
    [  INFO  ]   0.5.2

.. toctree::
   :maxdepth: 1

   getting_started
   coverage
   application
   quiz
   api
   dapi
   quick_reference
   system_reference
   tags
   bestpractices
   about
   license
   roadmap
>>>>>>> de25cdd8a29ca2bb2c2df08be00b703b967aaed5
